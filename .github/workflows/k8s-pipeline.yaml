name: pipeline for the reactjs and django app

on:
  workflow_dispatch:
  push:
    branches:
      - main 
  

env:
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  REACT_ECR_REPOSITORY: "react-k8s"
  DJANGO_ECR_REPOSITORY: "django-k8s"
 # IMAGE_TAG: ${{ github.sha }}
  AWS_REGION: "eu-south-1"
  # DOCKER_ENV_VARS: "-e DB_USER=${{ vars.DB_USER }} -e DB_PASS=${{ secrets.DB_PASS }}"


jobs:
  docker-build:
    runs-on: ubuntu-latest
    outputs:
      REACT_IMAGE: ${{ steps.build_push_image.REACT_IMAGE }}
      REACT_REPO: ${{ steps.build_push_image.REACT_REPO }}
      DJANGO_IMAGE: ${{ steps.build_push_image.DJANGO_IMAGE }}
      DJANGO_REPO: ${{ steps.build_push_image.DJANGO_REPO }}
    steps:
      - name: Checkout_Code
        uses: actions/checkout@v3
      - name: Configure_AWS_Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.ECR_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.ECR_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}           
      - name: Login_to_ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: "true"
      
      - name: Calculate IMAGE_TAG
        id: image-tag
        run: |
          COMMIT_ID=$(echo ${GITHUB_SHA:0:7})
          BUILD_ID=$GITHUB_RUN_NUMBER
          IMAGE_TAG=$COMMIT_ID-$BUILD_ID
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Build_and_push_image_to_ECR
        id: build_push_image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          pwd
          ls -ltr 
          echo $REGISTRY/${REACT_ECR_REPOSITORY}:$IMAGE_TAG
          docker build -t $REGISTRY/${REACT_ECR_REPOSITORY}:v$IMAGE_TAG -f inquiring-frontend-react/frontend_react_inquiring/Dockerfile ./inquiring-frontend-react/frontend_react_inquiring && docker push $REGISTRY/${REACT_ECR_REPOSITORY}:v$IMAGE_TAG
          # docker build -t $REGISTRY/${DJANGO_ECR_REPOSITORY}:v$IMAGE_TAG -f backend_drf_inquiring/Dockerfile.prod ./backend_drf_inquiring && docker push $REGISTRY/${DJANGO_ECR_REPOSITORY}:v$IMAGE_TAG
          echo "REACT_IMAGE=$REGISTRY/${REACT_ECR_REPOSITORY}:$IMAGE_TAG" >> $GITHUB_OUTPUT
          echo "REACT_REPO=$REGISTRY/${REACT_ECR_REPOSITORY}" >> $GITHUB_OUTPUT
          echo "DJANGO_IMAGE=$REGISTRY/${DJANGO_ECR_REPOSITORY}:$IMAGE_TAG" >> $GITHUB_OUTPUT
          echo "DJANGO_REPO=$REGISTRY/${DJANGO_ECR_REPOSITORY}" >> $GITHUB_OUTPUT
          
  deploy-app:
    needs:  ["docker-build"]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout_Code
        uses: actions/checkout@v3
      - name: Loging in the ECR Registry
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.ECR_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.ECR_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Authenticate with ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin 239428837152.dkr.ecr.eu-south-1.amazonaws.com
        
      - name: Loging in the EKS Cluster
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.EKS_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.EKS_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up kubectl
        run: |
          aws eks --region $AWS_REGION update-kubeconfig --name ${{ secrets.CLUSTER_NAME }}   

      - name: Deploy to django app into EKS
        env:
           DJANGO_IMAGE: ${{ needs.docker-build.outputs.DJANGO_IMAGE }}
           DJANGO_REPO: ${{ needs.docker-build.outputs.DJANGO_REPO }}
           REACT_IMAGE:  ${{ needs.docker-build.outputs.REACT_IMAGE }}
           REACT_REPO:  ${{ needs.docker-build.outputs.REACT_REPO }}
        run: |
           kubectl get all 
           echo "Debuging ......................Debuging"
           echo ${{ needs.docker-build.outputs.REACT_IMAGE }} ${{ needs.docker-build.outputs.REACT_REPO }}
           echo ${{ env.REACT_IMAGE }} ${{ env.REACT_REPO }}
           echo "Debuging ......................Debuging"
           pwd 
           ls -al
           sed -i.bak "s|${{ env.REACT_REPO }}.*|${{ env.REACT_IMAGE }}|g" ./k8s-django-react/react-manifeast/react-deployment.yaml
           kubectl apply -f ./k8s-django-react/react-manifeast/react-deployment.yaml